syntax = "proto3";

package soccerbuddy.team.v1;

import "google/protobuf/timestamp.proto";
import "google/type/datetime.proto";
import "soccerbuddy/shared.proto";

option go_package = "soccerbuddy/team/v1;teamv1";

service TeamService {
  rpc CreateTeam(CreateTeamRequest) returns (CreateTeamResponse) {}

  rpc ListTeams(ListTeamsRequest) returns (ListTeamsResponse) {}

  rpc DeleteTeam(DeleteTeamRequest) returns (DeleteTeamResponse) {}

  rpc GetTeamOverview(GetTeamOverviewRequest) returns (GetTeamOverviewResponse) {}

  rpc SearchPersonsNotInTeam(SearchPersonsNotInTeamRequest) returns (SearchPersonsNotInTeamResponse) {}

  rpc AddPersonToTeam(AddPersonToTeamRequest) returns (AddPersonToTeamResponse) {}

  rpc ListTeamMembers(ListTeamMembersRequest) returns (ListTeamMembersResponse) {}

  rpc ScheduleTraining(ScheduleTrainingRequest) returns (ScheduleTrainingResponse) {}

  rpc GetMyTeamHome(GetMyTeamHomeRequest) returns (GetMyTeamHomeResponse) {}

  rpc NominatePersonsForTraining(NominatePersonsForTrainingRequest) returns (NominatePersonsForTrainingResponse) {}
}

message CreateTeamRequest {
  string name = 1;
  string owning_club_id = 2;
}

message CreateTeamResponse {
  string id = 1;
  string name = 2;
  string slug = 3;
  string owning_club_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message ListTeamsRequest {
  string owning_club_id = 1;
}

message ListTeamsResponse {
  repeated Team teams = 1;

  message Team {
    string id = 1;
    string name = 2;
    string slug = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
  }
}

message GetTeamOverviewRequest {
  string team_slug = 1;
}
message GetTeamOverviewResponse {
  string id = 1;
  string name = 2;
  string slug = 3;
  string owning_club_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message AddPersonToTeamRequest {
  string team_id = 1;
  string person_id = 2;
  string role = 3;
}

message AddPersonToTeamResponse {}

message DeleteTeamRequest {
  string team_id = 1;
}

message DeleteTeamResponse {}

message SearchPersonsNotInTeamRequest {
  string team_id = 1;
  string query = 2;
}

message SearchPersonsNotInTeamResponse {
  repeated Person persons = 1;

  message Person {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
  }
}

message ListTeamMembersRequest {
  string team_id = 1;
}

message ListTeamMembersResponse {
  repeated Member members = 1;

  message Member {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    string person_id = 4;
    optional string inviter_id = 5;
    string role = 6;
    google.protobuf.Timestamp joined_at = 7;
  }
}

message ScheduleTrainingRequest {
  string team_id = 1;
  google.type.DateTime scheduled_at = 2;
  google.type.DateTime ends_at = 3;
  optional string location = 4;
  // The type of field used: e.g. hard floor, lawn, etc.
  optional string field_type = 5;
  optional GatheringPoint gathering_point = 6;
  optional AcknowledgementSettings acknowledgment_settings = 7;
  optional string description = 8;
  optional RatingSettings rating_settings = 9;
  optional Nominations nominations = 10;
}

message GatheringPoint {
  string location = 5;
  google.type.DateTime gathering_until = 6;
}

message AcknowledgementSettings {
  google.type.DateTime deadline = 1;
}

message RatingSettings {
  soccerbuddy.shared.RatingPolicy policy = 1;
}

message Nominations {
  repeated string player_ids = 1;
  repeated string staff_ids = 2;
  NotificationPolicy notification_policy = 3;

  enum NotificationPolicy {
    NOTIFICATION_POLICY_UNSPECIFIED = 0;
    NOTIFICATION_POLICY_SILENT = 1;
    NOTIFICATION_POLICY_REQUIRED = 2;
  }
}

message ScheduleTrainingResponse {}

message GetMyTeamHomeRequest {
  string team_id = 1;
}

message GetMyTeamHomeResponse {
  string team_id = 1;
  string team_name = 2;
  repeated Training trainings = 3;

  message Training {
    string id = 1;
    google.type.DateTime scheduled_at = 2;
    google.type.DateTime ends_at = 3;
    optional string location = 4;
    // The type of field used: e.g. hard floor, lawn, etc.
    optional string field_type = 5;
    optional GatheringPoint gathering_point = 6;
    optional AcknowledgementSettings acknowledgment_settings = 7;
    optional string description = 8;
    optional RatingSettings rating_settings = 9;
    optional Nominations nominations = 10;
  }

  message Nominations {
    repeated Nomination players = 1;
    repeated Nomination staff = 2;
  }

  message Nomination {
    string person_id = 1;

    oneof response {
      Accepted accepted = 2;
      Declined declined = 3;
      Tentative tentative = 4;
      NotAnswered not_answered = 5;
    }
    google.protobuf.Timestamp rsvp_at = 6;

    string person_name = 7;

    message Accepted {
      google.protobuf.Timestamp accepted_at = 1;
    }

    message Declined {
      google.protobuf.Timestamp declined_at = 1;
      optional string reason = 2;
    }

    message Tentative {
      google.protobuf.Timestamp tentative_at = 1;
      optional string reason = 2;
    }

    message NotAnswered {
    }
  }
}

message NominatePersonsForTrainingRequest {
  string training_id = 1;
  repeated string player_ids = 2;
  repeated string staff_ids = 3;
}

message NominatePersonsForTrainingResponse {}
